[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://b71as4grbjdsv"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_vsmvm"]
output_port_for_preview = 0
default_input_values = [0, Vector3(239.72, -2.47, 3.44)]
function = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_45onm"]
default_input_values = [0, 0.56, 1, 0.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_iaxko"]
default_input_values = [0, 2.63, 1, 0.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4ambr"]
default_input_values = [0, 0.0, 1, 0.01]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i0eo6"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1e2lm"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qo8kb"]
input_name = "time"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ku2ar"]
noise_type = 3
frequency = 0.0092
fractal_type = 2

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_clb6e"]
noise = SubResource("FastNoiseLite_ku2ar")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6ya1n"]
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_clb6e")
texture_type = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_vr6ex"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qadtp"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_vtx_7 : source_color;



void vertex() {
// Input:4
	vec3 n_out4p0 = VERTEX;


// Input:6
	float n_out6p0 = TIME;


// FloatOp:10
	float n_in10p1 = 0.01000;
	float n_out10p0 = n_out6p0 * n_in10p1;


// VectorOp:9
	vec3 n_in9p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out9p0 = vec3(n_out10p0) + n_in9p1;


// UVFunc:8
	vec2 n_in8p1 = vec2(1.00000, 1.00000);
	vec2 n_out8p0 = vec2(n_out9p0.xy) * n_in8p1 + UV;


// Texture2D:7
	vec4 n_out7p0 = texture(tex_vtx_7, n_out8p0);
	float n_out7p1 = n_out7p0.r;


// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + vec3(n_out7p1);


// Output:0
	VERTEX = n_out5p0;


}

void fragment() {
	vec3 n_out2p0;
// ColorFunc:2
	vec3 n_in2p0 = vec3(239.72000, -2.47000, 3.44000);
	{
		vec3 c = n_in2p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out2p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// FloatOp:3
	float n_in3p0 = 0.56000;
	float n_in3p1 = 0.00000;
	float n_out3p0 = n_in3p0 + n_in3p1;


// FloatOp:4
	float n_in4p0 = 2.63000;
	float n_in4p1 = 0.00000;
	float n_out4p0 = n_in4p0 + n_in4p1;


// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out3p0;
	SPECULAR = n_out4p0;


}
"
graph_offset = Vector2(-315.685, 25.0101)
nodes/vertex/0/position = Vector2(1260, 60)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_i0eo6")
nodes/vertex/4/position = Vector2(-480, -140)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorOp_1e2lm")
nodes/vertex/5/position = Vector2(160, -20)
nodes/vertex/6/node = SubResource("VisualShaderNodeInput_qo8kb")
nodes/vertex/6/position = Vector2(-3520, 400)
nodes/vertex/7/node = SubResource("VisualShaderNodeTexture_6ya1n")
nodes/vertex/7/position = Vector2(-1160, 0)
nodes/vertex/8/node = SubResource("VisualShaderNodeUVFunc_vr6ex")
nodes/vertex/8/position = Vector2(-1800, 140)
nodes/vertex/9/node = SubResource("VisualShaderNodeVectorOp_qadtp")
nodes/vertex/9/position = Vector2(-2400, 380)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatOp_4ambr")
nodes/vertex/10/position = Vector2(-2840, 380)
nodes/vertex/connections = PackedInt32Array(4, 0, 5, 0, 7, 1, 5, 1, 5, 0, 0, 0, 8, 0, 7, 0, 9, 0, 8, 2, 6, 0, 10, 0, 10, 0, 9, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorFunc_vsmvm")
nodes/fragment/2/position = Vector2(-980, 20)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_45onm")
nodes/fragment/3/position = Vector2(-880, 540)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_iaxko")
nodes/fragment/4/position = Vector2(-680, 920)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 0, 1, 4, 0, 0, 4)
